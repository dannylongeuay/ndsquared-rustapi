name: Release and Publish
on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "Dockerfile"
      - "Cargo.toml"
      - "Cargo.lock"
jobs:
  dry-release:
    name: Semantic Release Dryrun
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.gsr_action.outputs.version}}
    steps:
      - uses: actions/checkout@v3
      - uses: go-semantic-release/action@v1
        id: gsr_action
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          dry: true
  update-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Find and Replace Cargo
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: '^version = "\d+\.\d+\.\d+"'
          replace: 'version = "${{needs.dry-release.outputs.version}}"'
          include: "Cargo.toml"
      - name: Find and Replace Kustomization
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: 'newTag: \d+\.\d+\.\d+'
          replace: 'newTag: ${{needs.dry-release.outputs.version}}'
          include: "deploy/kustomization/kustomization.yaml"
      - name: Find and Replace Battlesnake
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: 'version: "\d+\.\d+\.\d+"'
          replace: 'version: "${{needs.dry-release.outputs.version}}"'
          include: "src/battlesnake.rs"
      - name: Add and Commit Changes
        uses: EndBug/add-and-commit@v9
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.gsr_action.outputs.version}}
    steps:
      - uses: actions/checkout@v3
      - uses: go-semantic-release/action@v1
        id: gsr_action
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  publish:
    name: Publish image to Docker Hub
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v3
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: dannylongeuay/ndsq-rustapi
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{needs.dry-release.outputs.version}}"